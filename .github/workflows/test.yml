name: Passkey Full Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  full-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build Go CLI
        working-directory: go
        run: go build -o passkey

      - name: Run Go tests
        working-directory: go
        run: go test -v ./...

      - name: Run shell script tests
        run: bash shell/test_passkey.sh

      - name: Build Docker image
        run: docker build -t passkey .

      - name: Run Docker test
        run: bash tests/docker_test.sh

      - name: Test Go <-> Shell compatibility
        run: |
          PASSCRYPT_KEY="MyC001P@s$w0rd" ./go/passkey e -mode shell "BridgeTest123" > cipher.txt
          shell_output=$(PASSCRYPT_KEY="MyC001P@s$w0rd" ./shell/passkey.sh d "$(cat cipher.txt)")
          if [ "$shell_output" != "BridgeTest123" ]; then
            echo "Shell failed to decrypt Go output"
            exit 1
          fi

          PASSCRYPT_KEY="MyC001P@s$w0rd" ./shell/passkey.sh e "BridgeTest123" > cipher2.txt
          go_output=$(PASSCRYPT_KEY="MyC001P@s$w0rd" ./go/passkey d "$(cat cipher2.txt)")
          if [ "$go_output" != "BridgeTest123" ]; then
            echo "Go failed to decrypt Shell output"
            exit 1
          fi

      - name: Docker <-> Shell compatibility
        run: |
          docker run --rm -e PASSCRYPT_KEY="My Key" passkey e "BridgeTest123" > cipher3.txt
          shell_dec=$(PASSCRYPT_KEY="My Key" ./shell/passkey.sh d "$(cat cipher3.txt)")
          if [ "$shell_dec" != "BridgeTest123" ]; then
            echo "Shell failed to decrypt Docker output"
            exit 1
          fi
